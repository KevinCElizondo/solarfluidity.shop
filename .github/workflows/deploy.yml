name: Deploy to Netlify

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          # Agregar cualquier variable de entorno necesaria para la compilaci√≥n
          NODE_ENV: production

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv

      - name: Notify deployment API
        run: |
          python -c "
          import requests
          import os
          from datetime import datetime

          # Notify our API about the deployment
          try:
              response = requests.post(
                  'https://solarfluidity.shop/api/deployment',
                  json={
                      'branch': 'main',
                      'user_triggered': False,
                      'timestamp': datetime.now().isoformat()
                  },
                  headers={'Authorization': f'Bearer {os.environ.get(\"API_TOKEN\")}'}
              )
              print(f'Notification sent: {response.status_code}')
          except Exception as e:
              print(f'Error sending notification: {str(e)}')
          "
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
